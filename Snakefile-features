###########################################################################################################################
# EXTRACTING FEATURES
###########################################################################################################################

configfile: "config.yaml"
all_rna=["protein-exon2", "protein-exon3", "functional-lncrna-exon1", "functional-lncrna-exon2", "functional-short-ncrna", "protein-exon2-negative-control", "protein-exon3-negative-control", "lncrna-exon1-negative-control", "lncrna-exon2-negative-control", "short-ncrna-negative-control"]
rna_types=["protein-exon2", "protein-exon3", "lncrna-exon1", "lncrna-exon2", "short-ncrna"]

#############
## GC content 
#############

rule all_GC:
    input:
        expand("data/{sample}-GC.csv", sample=all_rna)

rule run_intrinsic_seq_features:
    input:
        "data/{sample}-dataset.csv"
    output:
        "data/{sample}-GC.csv"
    shell:
        "bin/intrinsic-seq-features.sh {input} > {output}"


###############
## Conservation 
###############

rule all_conservation:
    input:
        expand("data/conservation/{sample}-conservation.csv", sample=all_rna)

rule run_seq_conservation_features:
    input:
        "data/{sample}-dataset.csv"
    output:
        "data/conservation/{sample}-conservation.csv"
    shell:
        "bin/seq-conservation-features.sh {input} > {output}"


################
## Transcriptome
################

rule all_transcriptome:
    input:
        expand("data/transcriptome/{sample}-transcriptome.csv", sample=all_rna)

rule run_transcriptome:
    input:
        "data/{sample}-dataset.csv", 
        encode_folder=config["encode_folder"]

    output:
        "data/transcriptome/{sample}-transcriptome.csv"

    shell:
        "bin/transcriptome-expression-features.sh {input} > {output}"


##################        
## Genomic repeats 
##################

rule all_genomic_repeat:
    input:
        expand("data/repeats/{sample}-repeats.csv", sample=all_rna)

rule run_genomic_repeat:
    input:
        initial_data="data/{sample}-dataset.csv",
        initial_fasta="data/{sample}-seq.fa", 
        human_genome_mmseqs=config["human_genome_mmseqs"],
        dfam_hits=config["dfam_hits"]   

    output:
        "data/repeats/{sample}-repeats.csv"

    shell:
        "bin/genomic-repeat-associated-features.sh {input} > {output}"


#######################        
## Population variation
#######################

rule all_population_variation:
    input:
        expand("data/population/{sample}-variation.csv", sample=all_rna),

rule run_populatio_variation:
    input:
        initial_data="data/{sample}-dataset.csv",
        initial_fasta="data/{sample}-seq.fa", 
        chain_file=config["chain_file"], 
        onekGP_directory=config["onekGP_directory"],
        gnomad_directory=config["gnomad_directory"]

    output:
        "data/population/{sample}-variation.csv"

    shell:
        "bin/population-variation-features.sh {input} > {output}"


###########################        
## Protein and RNA specific 
###########################

rule all_protein_and_rna_specific_features:
    input:
        expand("data/specific/{sample}-specific.csv", sample=all_rna)   

rule run_protein_and_rna_specific_features:
    input:
        initial_data="data/{sample}-dataset.csv",
        initial_fasta="data/{sample}-seq.fa",
        interaction_database=config["interaction_database"],
        access_file=config["access_file"],
        cpc2_file=config["cpc2_file"],
        bigBedToBed_exe=["bigBedToBed_exe"],
        cactus_align_url=config["cactus_align_url"]
        
    output:
        "data/specific/{sample}-specific.csv"
       
    shell:
        "bin/protein-and-rna-specific-features.sh {input} > {output}"


#### FINAL FEATURES DATASET #### 
rule all_concatenate_features:
    input:
        expand("data/{sample}-features.csv", sample=all_rna)
      

rule concatenate_features:
    input:
        "data/{sample}-dataset.csv",
        "data/intrinsic/{sample}-GC.csv",
        "data/conservation/{sample}-conservation.csv",
        "data/transcriptome/{sample}-transcriptome.csv",
        "data/repeats/{sample}-repeats.csv",
        "data/specific/{sample}-specific.csv", 
        "data/population/{sample}-variation.csv"

    output:
        "data/{sample}-features.csv"
    shell:
        "paste -d ',' {input} > {output}"


## Join negative control with corresponding functional dataset ## 

rule all_join_positive_negative:
    input:
        expand("data/{sample}-features.csv", sample=rna_types)
      
rule join_positive_negative:
    input:
        positive="data/*-{sample}-features.csv",
        negative="data/{sample}-negative-control-features.csv"
        
    output:
        "data/{sample}-features.csv"

    shell:
        "paste -d'\n' {input.positive}{input.negative} > {output}"
